// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: lrs.proto

#ifndef PROTOBUF_INCLUDED_lrs_2eproto
#define PROTOBUF_INCLUDED_lrs_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3006001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_lrs_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_lrs_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[3]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_lrs_2eproto();
namespace lrs {
class GetRouteRequest;
class GetRouteRequestDefaultTypeInternal;
extern GetRouteRequestDefaultTypeInternal _GetRouteRequest_default_instance_;
class GetRouteResponse;
class GetRouteResponseDefaultTypeInternal;
extern GetRouteResponseDefaultTypeInternal _GetRouteResponse_default_instance_;
class HostInfo;
class HostInfoDefaultTypeInternal;
extern HostInfoDefaultTypeInternal _HostInfo_default_instance_;
}  // namespace lrs
namespace google {
namespace protobuf {
template<> ::lrs::GetRouteRequest* Arena::CreateMaybeMessage<::lrs::GetRouteRequest>(Arena*);
template<> ::lrs::GetRouteResponse* Arena::CreateMaybeMessage<::lrs::GetRouteResponse>(Arena*);
template<> ::lrs::HostInfo* Arena::CreateMaybeMessage<::lrs::HostInfo>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace lrs {

enum MessageId {
  ID_UNKNOW = 0,
  ID_GetRouteRequest = 1,
  ID_GetRouteResponse = 2,
  MessageId_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::min(),
  MessageId_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::max()
};
bool MessageId_IsValid(int value);
const MessageId MessageId_MIN = ID_UNKNOW;
const MessageId MessageId_MAX = ID_GetRouteResponse;
const int MessageId_ARRAYSIZE = MessageId_MAX + 1;

const ::google::protobuf::EnumDescriptor* MessageId_descriptor();
inline const ::std::string& MessageId_Name(MessageId value) {
  return ::google::protobuf::internal::NameOfEnum(
    MessageId_descriptor(), value);
}
inline bool MessageId_Parse(
    const ::std::string& name, MessageId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MessageId>(
    MessageId_descriptor(), name, value);
}
// ===================================================================

class HostInfo final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:lrs.HostInfo) */ {
 public:
  HostInfo();
  virtual ~HostInfo();

  HostInfo(const HostInfo& from);

  inline HostInfo& operator=(const HostInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HostInfo(HostInfo&& from) noexcept
    : HostInfo() {
    *this = ::std::move(from);
  }

  inline HostInfo& operator=(HostInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const HostInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const HostInfo* internal_default_instance() {
    return reinterpret_cast<const HostInfo*>(
               &_HostInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(HostInfo* other);
  friend void swap(HostInfo& a, HostInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HostInfo* New() const final {
    return CreateMaybeMessage<HostInfo>(nullptr);
  }

  HostInfo* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<HostInfo>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const HostInfo& from);
  void MergeFrom(const HostInfo& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(HostInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 ip = 1;
  void clear_ip();
  static const int kIpFieldNumber = 1;
  ::google::protobuf::int32 ip() const;
  void set_ip(::google::protobuf::int32 value);

  // int32 port = 2;
  void clear_port();
  static const int kPortFieldNumber = 2;
  ::google::protobuf::int32 port() const;
  void set_port(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:lrs.HostInfo)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 ip_;
  ::google::protobuf::int32 port_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_lrs_2eproto;
};
// -------------------------------------------------------------------

class GetRouteRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:lrs.GetRouteRequest) */ {
 public:
  GetRouteRequest();
  virtual ~GetRouteRequest();

  GetRouteRequest(const GetRouteRequest& from);

  inline GetRouteRequest& operator=(const GetRouteRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetRouteRequest(GetRouteRequest&& from) noexcept
    : GetRouteRequest() {
    *this = ::std::move(from);
  }

  inline GetRouteRequest& operator=(GetRouteRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const GetRouteRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetRouteRequest* internal_default_instance() {
    return reinterpret_cast<const GetRouteRequest*>(
               &_GetRouteRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(GetRouteRequest* other);
  friend void swap(GetRouteRequest& a, GetRouteRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetRouteRequest* New() const final {
    return CreateMaybeMessage<GetRouteRequest>(nullptr);
  }

  GetRouteRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GetRouteRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GetRouteRequest& from);
  void MergeFrom(const GetRouteRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetRouteRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 modid = 1;
  void clear_modid();
  static const int kModidFieldNumber = 1;
  ::google::protobuf::int32 modid() const;
  void set_modid(::google::protobuf::int32 value);

  // int32 cmdid = 2;
  void clear_cmdid();
  static const int kCmdidFieldNumber = 2;
  ::google::protobuf::int32 cmdid() const;
  void set_cmdid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:lrs.GetRouteRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 modid_;
  ::google::protobuf::int32 cmdid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_lrs_2eproto;
};
// -------------------------------------------------------------------

class GetRouteResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:lrs.GetRouteResponse) */ {
 public:
  GetRouteResponse();
  virtual ~GetRouteResponse();

  GetRouteResponse(const GetRouteResponse& from);

  inline GetRouteResponse& operator=(const GetRouteResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetRouteResponse(GetRouteResponse&& from) noexcept
    : GetRouteResponse() {
    *this = ::std::move(from);
  }

  inline GetRouteResponse& operator=(GetRouteResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const GetRouteResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetRouteResponse* internal_default_instance() {
    return reinterpret_cast<const GetRouteResponse*>(
               &_GetRouteResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(GetRouteResponse* other);
  friend void swap(GetRouteResponse& a, GetRouteResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetRouteResponse* New() const final {
    return CreateMaybeMessage<GetRouteResponse>(nullptr);
  }

  GetRouteResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GetRouteResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GetRouteResponse& from);
  void MergeFrom(const GetRouteResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetRouteResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .lrs.HostInfo host = 3;
  int host_size() const;
  void clear_host();
  static const int kHostFieldNumber = 3;
  ::lrs::HostInfo* mutable_host(int index);
  ::google::protobuf::RepeatedPtrField< ::lrs::HostInfo >*
      mutable_host();
  const ::lrs::HostInfo& host(int index) const;
  ::lrs::HostInfo* add_host();
  const ::google::protobuf::RepeatedPtrField< ::lrs::HostInfo >&
      host() const;

  // int32 modid = 1;
  void clear_modid();
  static const int kModidFieldNumber = 1;
  ::google::protobuf::int32 modid() const;
  void set_modid(::google::protobuf::int32 value);

  // int32 cmdid = 2;
  void clear_cmdid();
  static const int kCmdidFieldNumber = 2;
  ::google::protobuf::int32 cmdid() const;
  void set_cmdid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:lrs.GetRouteResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::lrs::HostInfo > host_;
  ::google::protobuf::int32 modid_;
  ::google::protobuf::int32 cmdid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_lrs_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// HostInfo

// int32 ip = 1;
inline void HostInfo::clear_ip() {
  ip_ = 0;
}
inline ::google::protobuf::int32 HostInfo::ip() const {
  // @@protoc_insertion_point(field_get:lrs.HostInfo.ip)
  return ip_;
}
inline void HostInfo::set_ip(::google::protobuf::int32 value) {
  
  ip_ = value;
  // @@protoc_insertion_point(field_set:lrs.HostInfo.ip)
}

// int32 port = 2;
inline void HostInfo::clear_port() {
  port_ = 0;
}
inline ::google::protobuf::int32 HostInfo::port() const {
  // @@protoc_insertion_point(field_get:lrs.HostInfo.port)
  return port_;
}
inline void HostInfo::set_port(::google::protobuf::int32 value) {
  
  port_ = value;
  // @@protoc_insertion_point(field_set:lrs.HostInfo.port)
}

// -------------------------------------------------------------------

// GetRouteRequest

// int32 modid = 1;
inline void GetRouteRequest::clear_modid() {
  modid_ = 0;
}
inline ::google::protobuf::int32 GetRouteRequest::modid() const {
  // @@protoc_insertion_point(field_get:lrs.GetRouteRequest.modid)
  return modid_;
}
inline void GetRouteRequest::set_modid(::google::protobuf::int32 value) {
  
  modid_ = value;
  // @@protoc_insertion_point(field_set:lrs.GetRouteRequest.modid)
}

// int32 cmdid = 2;
inline void GetRouteRequest::clear_cmdid() {
  cmdid_ = 0;
}
inline ::google::protobuf::int32 GetRouteRequest::cmdid() const {
  // @@protoc_insertion_point(field_get:lrs.GetRouteRequest.cmdid)
  return cmdid_;
}
inline void GetRouteRequest::set_cmdid(::google::protobuf::int32 value) {
  
  cmdid_ = value;
  // @@protoc_insertion_point(field_set:lrs.GetRouteRequest.cmdid)
}

// -------------------------------------------------------------------

// GetRouteResponse

// int32 modid = 1;
inline void GetRouteResponse::clear_modid() {
  modid_ = 0;
}
inline ::google::protobuf::int32 GetRouteResponse::modid() const {
  // @@protoc_insertion_point(field_get:lrs.GetRouteResponse.modid)
  return modid_;
}
inline void GetRouteResponse::set_modid(::google::protobuf::int32 value) {
  
  modid_ = value;
  // @@protoc_insertion_point(field_set:lrs.GetRouteResponse.modid)
}

// int32 cmdid = 2;
inline void GetRouteResponse::clear_cmdid() {
  cmdid_ = 0;
}
inline ::google::protobuf::int32 GetRouteResponse::cmdid() const {
  // @@protoc_insertion_point(field_get:lrs.GetRouteResponse.cmdid)
  return cmdid_;
}
inline void GetRouteResponse::set_cmdid(::google::protobuf::int32 value) {
  
  cmdid_ = value;
  // @@protoc_insertion_point(field_set:lrs.GetRouteResponse.cmdid)
}

// repeated .lrs.HostInfo host = 3;
inline int GetRouteResponse::host_size() const {
  return host_.size();
}
inline void GetRouteResponse::clear_host() {
  host_.Clear();
}
inline ::lrs::HostInfo* GetRouteResponse::mutable_host(int index) {
  // @@protoc_insertion_point(field_mutable:lrs.GetRouteResponse.host)
  return host_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::lrs::HostInfo >*
GetRouteResponse::mutable_host() {
  // @@protoc_insertion_point(field_mutable_list:lrs.GetRouteResponse.host)
  return &host_;
}
inline const ::lrs::HostInfo& GetRouteResponse::host(int index) const {
  // @@protoc_insertion_point(field_get:lrs.GetRouteResponse.host)
  return host_.Get(index);
}
inline ::lrs::HostInfo* GetRouteResponse::add_host() {
  // @@protoc_insertion_point(field_add:lrs.GetRouteResponse.host)
  return host_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::lrs::HostInfo >&
GetRouteResponse::host() const {
  // @@protoc_insertion_point(field_list:lrs.GetRouteResponse.host)
  return host_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace lrs

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::lrs::MessageId> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::lrs::MessageId>() {
  return ::lrs::MessageId_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_lrs_2eproto
